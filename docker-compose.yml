version: "3.3"

services:

  frontend:
    container_name: frontend-container
    image: frontend:latest
    build:
        context: ./frontend
        dockerfile: Dockerfile
    ports:
      - 3001:3001
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./frontend:/frontend
    restart: on-failure
    networks:
      - backend

  backend:
    container_name: backend-container
    image: backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    env_file:
       - .env
    depends_on:
      - postgres
    volumes:
      - ./backend:/backend
      - /backend/node_modules
    restart: on-failure
    networks:
      - backend
    
  postgres:
    container_name: postgres-container
    image: postgres:buster
    env_file:
        - .env
    environment:
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_HOST: ${DB_HOST}
        POSTGRES_PORT: ${DB_PORT}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_DB: ${DB_NAME}
    ports:
      - 5432:5432
    volumes:
      - data:/var/lib/postgresql/data
      - ./backend/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
      # - ./backend/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    restart: on-failure
    networks:
      - backend

volumes:
  data:
    # driver: local
    # driver_opts:
    #   type: none
    #   o: bind
    #   device: $PWD/postgres_data/

networks:
  backend:
